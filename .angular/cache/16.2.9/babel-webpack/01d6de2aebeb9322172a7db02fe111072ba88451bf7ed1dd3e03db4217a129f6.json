{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/\";\n  }\n  getStudentById(studentId) {\n    return this.httpClient.get(`${this.baseUrl}/findStudent/${studentId}`);\n  }\n  getStudents() {\n    return this.httpClient.get(`${this.baseUrl}/students`);\n  }\n  saveStudent(student) {\n    return this.httpClient.post(`${this.baseUrl}/addStudent`, student);\n  }\n  deleteStudent(studentId) {\n    console.log(`${this.baseUrl}delete/${studentId}`);\n    return this.httpClient.delete(`${this.baseUrl}delete/${studentId}`);\n  }\n  updateStudent(studentId, student) {\n    console.log(`${this.baseUrl}modify/${studentId}`);\n    console.log(student);\n    return this.httpClient.put(`${this.baseUrl}modify/${studentId}`, student);\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["StudentService","constructor","httpClient","baseUrl","getStudentById","studentId","get","getStudents","saveStudent","student","post","deleteStudent","console","log","delete","updateStudent","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/renaudrieux/Github/studentAngularFrontend/src/app/student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Student } from './Student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private baseUrl:string = \"http://localhost:8080/\"\n\n  constructor(private httpClient:HttpClient) {\n  }\n\n  getStudentById(studentId:number):  Observable<Student>{\n    return this.httpClient.get<Student>(`${this.baseUrl}/findStudent/${studentId}`)\n  }\n  \n  getStudents():Observable<Student[]>{\n    return this.httpClient.get<Student[]>(`${this.baseUrl}/students`);\n  }\n\n  saveStudent(student : Student) : Observable<Object>{\n    return this.httpClient.post(`${this.baseUrl}/addStudent`, student);\n  }\n\n  deleteStudent(studentId:number):Observable<Object>{\n    console.log(`${this.baseUrl}delete/${studentId}`);\n    return this.httpClient.delete(`${this.baseUrl}delete/${studentId}`);\n  }\n  \n  updateStudent(studentId:number, student:Student):Observable<Object>{\n    console.log(`${this.baseUrl}modify/${studentId}`);\n    console.log(student);\n    \n    \n    return this.httpClient.put(`${this.baseUrl}modify/${studentId}`,student)\n    \n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAU,wBAAwB;EAGjD;EAEAC,cAAcA,CAACC,SAAgB;IAC7B,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,OAAO,gBAAgBE,SAAS,EAAE,CAAC;EACjF;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,UAAU,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,OAAO,WAAW,CAAC;EACnE;EAEAK,WAAWA,CAACC,OAAiB;IAC3B,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,aAAa,EAAEM,OAAO,CAAC;EACpE;EAEAE,aAAaA,CAACN,SAAgB;IAC5BO,OAAO,CAACC,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,UAAUE,SAAS,EAAE,CAAC;IACjD,OAAO,IAAI,CAACH,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,UAAUE,SAAS,EAAE,CAAC;EACrE;EAEAU,aAAaA,CAACV,SAAgB,EAAEI,OAAe;IAC7CG,OAAO,CAACC,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,UAAUE,SAAS,EAAE,CAAC;IACjDO,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;IAGpB,OAAO,IAAI,CAACP,UAAU,CAACc,GAAG,CAAC,GAAG,IAAI,CAACb,OAAO,UAAUE,SAAS,EAAE,EAACI,OAAO,CAAC;EAE1E;EAAC,QAAAQ,CAAA,G;qBA9BUjB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdtB,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}